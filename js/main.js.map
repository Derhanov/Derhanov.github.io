{"version":3,"sources":["main.js"],"names":["touchHandler","e","touches","changedTouches","first","type","simulatedEvent","MouseEvent","view","window","bubbles","cancelable","clientX","clientY","screenX","screenY","target","dispatchEvent","console","log","init","document","addEventListener","targetNode","querySelector","triggerMouseEvent","node","eventType","clickEvent","createEvent","initEvent","DragManager","dragObject","self","onMouseDown","which","elem","closest","downX","pageX","downY","pageY","onMouseMove","avatar","moveX","moveY","Math","abs","createAvatar","coords","getCoords","shiftX","left","shiftY","top","startDrag","style","onMouseUp","finishDrag","dropElem","findDroppable","onDragCancel","onDragEnd","body","appendChild","zIndex","position","event","hidden","elementFromPoint","onmousemove","onmouseup","onmousedown","box","getBoundingClientRect","pageYOffset","pageXOffset"],"mappings":";;AAAA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,YAAW;AACR,aAASA,YAAT,CAAsBC,CAAtB,EAAyB;AACrB,YAAIC,UAAUD,EAAEE,cAAhB;AACA,YAAIC,QAAQF,QAAQ,CAAR,CAAZ;AACA,YAAIG,OAAO,EAAX;;AAEA,gBAAQJ,EAAEI,IAAV;AACI,iBAAK,YAAL;AACIA,uBAAO,WAAP;AACA;AACJ,iBAAK,WAAL;AACIA,uBAAO,WAAP;AACA;AACJ,iBAAK,UAAL;AACIA,uBAAO,SAAP;AACA;AACJ;AACI;AAXR;;AAcA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAIC,iBAAiB,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AACzCC,kBAAMC,MADmC;AAEzCC,qBAAS,IAFgC;AAGzCC,wBAAY,IAH6B;AAIzCC,qBAASR,MAAMQ,OAJ0B;AAKzCC,qBAAST,MAAMS,OAL0B;AAMzCC,qBAASV,MAAMU,OAN0B;AAOzCC,qBAASX,MAAMW;AAP0B,SAAxB,CAArB;AASAX,cAAMY,MAAN,CAAaC,aAAb,CAA2BX,cAA3B;AACAY,gBAAQC,GAAR,CAAYb,cAAZ;AAEH;;AAED,aAASc,IAAT,GAAgB;AACZC,iBAASC,gBAAT,CAA0B,YAA1B,EAAwCtB,YAAxC,EAAsD,IAAtD;AACAqB,iBAASC,gBAAT,CAA0B,WAA1B,EAAuCtB,YAAvC,EAAq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","file":"main.js","sourcesContent":["// document.addEventListener('DOMContentLoaded', function () {\n\n\n// const boxList = document.getElementsByClassName('draggable');\n// boxList.onmousedown = function (e) {\n//     for(let i=0; i < boxList.length; i++) {\n//         let obj = boxList[i];\n//         const touch = event.targetTouches[0];\n//         event.target.style.left = touch.pageX + 'px';\n//         event.target.style.top = touch.pageY + 'px';\n//             event.preventDefault();\n//         }\n// }\n\n// const dragObj = {};\n//\n// document.onmousedown = function (e) {\n//     if (e.wich != 1) {\n//         return;\n//     }\n//     const elem = e.target.closest('.draggable');\n//     if (!elem) {\n//         return;\n//     }\n//     dragObj.elem = elem;\n//     dragObj.downX = e.pageX;\n//     dragObj.downY = e.pageY;\n// };\n//\n// document.onmousemove = function (e) {\n//     if(!dragObj.elem) return;\n//     if(!dragObj.avatar) {\n//         const moveX = e.pageX - dragObj.downX;\n//         const moveY = e.pageY - dragObj.downY;\n//         if ( Math.abs(moveX) < 3 && Math.abs(moveY) < 3 ) {\n//             return;\n//         }\n//         dragObj.avatar = createAvatar(e);\n//         if (!dragObject.avatar) {\n//             dragObject = {};\n//             return;\n//         }\n//         const coords = getCoords(dragObj.avatar);\n//         dragObj.shiftX = dragObj.downX -coords.left;\n//         dragObj.shiftY = dragObj.downY - coords.top;\n//\n//         startDrag(e);\n//     }\n//\n//     dragObj.avatar.style.left = e.pageX - dragObj.shiftX + 'px';\n//     dragObj.avatar.style.top = e.pageY - dragObj.shiftY + 'px';\n//\n//     return false;\n// };\n//\n// function createAvatar(e) {\n//\n//     // запомнить старые свойства, чтобы вернуться к ним при отмене переноса\n//     var avatar = dragObj.elem;\n//     var old = {\n//         parent: avatar.parentNode,\n//         nextSibling: avatar.nextSibling,\n//         position: avatar.position || '',\n//         left: avatar.left || '',\n//         top: avatar.top || '',\n//         zIndex: avatar.zIndex || ''\n//     };\n//\n//     // функция для отмены переноса\n//     avatar.rollback = function() {\n//         old.parent.insertBefore(avatar, old.nextSibling);\n//         avatar.style.position = old.position;\n//         avatar.style.left = old.left;\n//         avatar.style.top = old.top;\n//         avatar.style.zIndex = old.zIndex\n//     };\n//\n//     return avatar;\n// }\n//\n// function startDrag(e) {\n//     var avatar = dragObj.avatar;\n//\n//     document.body.appendChild(avatar);\n//     avatar.style.zIndex = 9999;\n//     avatar.style.position = 'absolute';\n// }\n\n// });\n\n// const bodyDoc = document.querySelector('body');\n// const div = document.createElement('DIV');\n// document.body.appendChild(div);\n// div.innerHTML = '<h1>Hello world</h1>';\n// console.log(bodyDoc);\n\n(function() {\n    function touchHandler(e) {\n        var touches = e.changedTouches;\n        var first = touches[0];\n        var type = \"\";\n\n        switch (e.type) {\n            case \"touchstart\":\n                type = \"mousedown\";\n                break;\n            case \"touchmove\":\n                type = \"mousemove\";\n                break;\n            case \"touchend\":\n                type = \"mouseup\";\n                break;\n            default:\n                return;\n        }\n\n        //     var simulatedEvent = document.createEvent(\"MouseEvent\");\n        //     simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0, null);\n        //\n        //     first.target.dispatchEvent(simulatedEvent);\n        //     e.preventDefault();\n        // }\n\n        var simulatedEvent = new MouseEvent(\"click\", {\n            view: window,\n            bubbles: true,\n            cancelable: true,\n            clientX: first.clientX,\n            clientY: first.clientY,\n            screenX: first.screenX,\n            screenY: first.screenY\n    });\n        first.target.dispatchEvent(simulatedEvent);\n        console.log(simulatedEvent)\n\n    }\n\n    function init() {\n        document.addEventListener(\"touchstart\", touchHandler, true);\n        document.addEventListener(\"touchmove\", touchHandler, true);\n        document.addEventListener(\"touchend\", touchHandler, true);\n        document.addEventListener(\"touchcancel\", touchHandler, true);\n    }\n\n    init();\n})();\n\n\nvar targetNode = document.querySelector ('.draggable');\nif (targetNode) {\n    //--- Simulate a natural mouse-click sequence.\n    triggerMouseEvent (targetNode, \"mouseover\");\n    triggerMouseEvent (targetNode, \"mousedown\");\n    triggerMouseEvent (targetNode, \"mouseup\");\n    triggerMouseEvent (targetNode, \"click\");\n}\nelse\n    console.log (\"*** Target node not found!\");\n\nfunction triggerMouseEvent (node, eventType) {\n    var clickEvent = document.createEvent ('MouseEvents');\n    clickEvent.initEvent (eventType, true, true);\n    node.dispatchEvent (clickEvent);\n}\n\n\nvar DragManager = new function() {\n\n    /**\n     * составной объект для хранения информации о переносе:\n     * {\n   *   elem - элемент, на котором была зажата мышь\n   *   avatar - аватар\n   *   downX/downY - координаты, на которых был mousedown\n   *   shiftX/shiftY - относительный сдвиг курсора от угла элемента\n   * }\n     */\n    var dragObject = {};\n\n    var self = this;\n\n    function onMouseDown(e) {\n\n        if (e.which != 1) return;\n\n        var elem = e.target.closest('.draggable');\n        if (!elem) return;\n\n        dragObject.elem = elem;\n\n        // запомним, что элемент нажат на текущих координатах pageX/pageY\n        dragObject.downX = e.pageX;\n        dragObject.downY = e.pageY;\n\n        return false;\n    }\n\n    function onMouseMove(e) {\n        if (!dragObject.elem) return; // элемент не зажат\n\n        if (!dragObject.avatar) { // если перенос не начат...\n            var moveX = e.pageX - dragObject.downX;\n            var moveY = e.pageY - dragObject.downY;\n\n            // если мышь передвинулась в нажатом состоянии недостаточно далеко\n            if (Math.abs(moveX) < 3 && Math.abs(moveY) < 3) {\n                return;\n            }\n\n            // начинаем перенос\n            dragObject.avatar = createAvatar(e); // создать аватар\n            if (!dragObject.avatar) { // отмена переноса, нельзя \"захватить\" за эту часть элемента\n                dragObject = {};\n                return;\n            }\n\n            // аватар создан успешно\n            // создать вспомогательные свойства shiftX/shiftY\n            var coords = getCoords(dragObject.avatar);\n            dragObject.shiftX = dragObject.downX - coords.left;\n            dragObject.shiftY = dragObject.downY - coords.top;\n\n            startDrag(e); // отобразить начало переноса\n        }\n\n        // отобразить перенос объекта при каждом движении мыши\n        dragObject.avatar.style.left = e.pageX - dragObject.shiftX + 'px';\n        dragObject.avatar.style.top = e.pageY - dragObject.shiftY + 'px';\n\n        return false;\n    }\n\n    function onMouseUp(e) {\n        if (dragObject.avatar) { // если перенос идет\n            finishDrag(e);\n        }\n\n        // перенос либо не начинался, либо завершился\n        // в любом случае очистим \"состояние переноса\" dragObject\n        dragObject = {};\n    }\n\n    function finishDrag(e) {\n        var dropElem = findDroppable(e);\n\n        if (!dropElem) {\n            self.onDragCancel(dragObject);\n        } else {\n            self.onDragEnd(dragObject, dropElem);\n        }\n    }\n\n    function createAvatar(e) {\n\n        // запомнить старые свойства, чтобы вернуться к ним при отмене переноса\n        var avatar = dragObject.elem;\n        // var old = {\n        //     parent: avatar.parentNode,\n        //     nextSibling: avatar.nextSibling,\n        //     position: avatar.position || '',\n        //     left: avatar.left || '',\n        //     top: avatar.top || '',\n        //     zIndex: avatar.zIndex || ''\n        // };\n        //\n        // // функция для отмены переноса\n        // avatar.rollback = function() {\n        //     old.parent.insertBefore(avatar, old.nextSibling);\n        //     avatar.style.position = old.position;\n        //     avatar.style.left = old.left;\n        //     avatar.style.top = old.top;\n        //     avatar.style.zIndex = old.zIndex\n        // };\n\n        return avatar;\n    }\n\n    function startDrag(e) {\n        var avatar = dragObject.avatar;\n\n        // инициировать начало переноса\n        document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    }\n\n    function findDroppable(event) {\n        // спрячем переносимый элемент\n        dragObject.avatar.hidden = true;\n\n        // получить самый вложенный элемент под курсором мыши\n        var elem = document.elementFromPoint(event.clientX, event.clientY);\n\n        // показать переносимый элемент обратно\n        dragObject.avatar.hidden = false;\n\n        if (elem == null) {\n            // такое возможно, если курсор мыши \"вылетел\" за границу окна\n            return null;\n        }\n\n        return elem.closest('.droppable');\n    }\n\n    document.onmousemove = onMouseMove;\n    document.onmouseup = onMouseUp;\n    document.onmousedown = onMouseDown;\n\n    this.onDragEnd = function(dragObject, dropElem) {};\n    this.onDragCancel = function(dragObject) {};\n\n};\n\n\nfunction getCoords(elem) { // кроме IE8-\n    var box = elem.getBoundingClientRect();\n\n    return {\n        top: box.top + pageYOffset,\n        left: box.left + pageXOffset\n    };\n\n}\n\n"]}